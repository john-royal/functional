/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/teams": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Teams */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Team"][];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name: string;
            slug: string;
            /** @enum {string} */
            type: "personal" | "organization";
          };
        };
      };
      responses: {
        /** @description Team */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              id: string;
            };
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Team */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Team"];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Team deleted */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              id: string;
            };
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/projects": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Projects */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Project"][];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
        };
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            name: string;
            slug: string;
            githubRepositoryId: number;
            githubInstallationId: number;
            githubRepositoryName: string;
            githubRepositoryUrl: string;
          };
        };
      };
      responses: {
        /** @description Project created */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              id: string;
            };
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/projects/{project}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          project: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Project */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Project"];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          project: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Project deleted */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              id: string;
            };
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/github-installations": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description GitHub installations */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["GitHubInstallation"][];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/github-installations/{installationId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          installationId: number | null;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description GitHub installation */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["GitHubInstallation"];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          installationId: number | null;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description GitHub installation updated */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              id: number;
            };
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/github-installations/{installationId}/repositories": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          installationId: number | null;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description GitHub repositories */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["GitHubRepository"][];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/teams/{team}/projects/{project}/deployments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: {
      parameters: {
        query?: never;
        header?: never;
        path: {
          team: string;
          project: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Deployments */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": unknown[];
          };
        };
        /** @description An error response */
        default: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["ErrorResponsePayload"];
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    Team: {
      id: string;
      name: string;
      slug: string;
      /** @enum {string} */
      type: "personal" | "organization";
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    ErrorResponsePayload: {
      message: string;
      code: string;
      details?: {
        [key: string]: unknown;
      };
    };
    Project: {
      id: string;
      name: string;
      slug: string;
      teamId: string;
      githubRepositoryId: number;
      githubInstallationId: number;
      githubRepositoryName: string;
      githubRepositoryUrl: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    GitHubInstallation: {
      id: number;
      teamId: string;
      /** @enum {string} */
      targetType: "organization" | "user";
      targetId: number;
      targetName: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    GitHubRepository: {
      id: number;
      name: string;
      url: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
